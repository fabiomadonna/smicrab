"""change AnalysisStatus Enum

Revision ID: b4c65344d1a2
Revises: 9469c8aee794
Create Date: 2025-07-09 18:25:45.866861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b4c65344d1a2'
down_revision: Union[str, None] = '9469c8aee794'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_risk_map_module_analysis_id', table_name='risk_map_module')
    op.drop_table('risk_map_module')
    op.drop_index('idx_estimate_module_analysis_id', table_name='estimate_module')
    op.drop_table('estimate_module')
    op.drop_index('idx_load_module_analysis_id', table_name='load_module')
    op.drop_table('load_module')
    op.drop_index('idx_describe_module_analysis_id', table_name='describe_module')
    op.drop_table('describe_module')
    op.drop_index('idx_validate_module_analysis_id', table_name='validate_module')
    op.drop_table('validate_module')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('validate_module',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('current_step', postgresql.ENUM('residual_analysis', 'diagnostic_tests', 'model_performance', 'goodness_of_fit', 'validation_report', name='validatestep'), autoincrement=False, nullable=False),
    sa.Column('step_progress', postgresql.ENUM('pending', 'in_progress', 'completed', 'error', name='stepprogressstatus'), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('total_steps', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_reference', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], name='validate_module_analysis_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='validate_module_pkey'),
    sa.UniqueConstraint('analysis_id', name='validate_module_analysis_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('idx_validate_module_analysis_id', 'validate_module', ['analysis_id'], unique=False)
    op.create_table('describe_module',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('current_step', postgresql.ENUM('data_summary', 'correlation_analysis', 'distribution_analysis', 'time_series_plots', 'spatial_plots', 'export_results', name='describestep'), autoincrement=False, nullable=False),
    sa.Column('step_progress', postgresql.ENUM('pending', 'in_progress', 'completed', 'error', name='stepprogressstatus'), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('total_steps', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_reference', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], name='describe_module_analysis_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='describe_module_pkey'),
    sa.UniqueConstraint('analysis_id', name='describe_module_analysis_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('idx_describe_module_analysis_id', 'describe_module', ['analysis_id'], unique=False)
    op.create_table('load_module',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('current_step', postgresql.ENUM('start', 'model_config', 'build_dataframe', 'select_variable', 'download', 'done', name='loadstep'), autoincrement=False, nullable=False),
    sa.Column('step_progress', postgresql.ENUM('pending', 'in_progress', 'completed', 'error', name='stepprogressstatus'), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('total_steps', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_reference', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], name='load_module_analysis_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='load_module_pkey'),
    sa.UniqueConstraint('analysis_id', name='load_module_analysis_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('idx_load_module_analysis_id', 'load_module', ['analysis_id'], unique=False)
    op.create_table('estimate_module',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('current_step', postgresql.ENUM('model_setup', 'parameter_estimation', 'convergence_check', 'results_summary', 'export_estimates', name='estimatestep'), autoincrement=False, nullable=False),
    sa.Column('step_progress', postgresql.ENUM('pending', 'in_progress', 'completed', 'error', name='stepprogressstatus'), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('total_steps', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_reference', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], name='estimate_module_analysis_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='estimate_module_pkey'),
    sa.UniqueConstraint('analysis_id', name='estimate_module_analysis_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('idx_estimate_module_analysis_id', 'estimate_module', ['analysis_id'], unique=False)
    op.create_table('risk_map_module',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('current_step', postgresql.ENUM('risk_calculation', 'spatial_mapping', 'threshold_analysis', 'risk_visualization', 'export_risk_maps', name='riskmapstep'), autoincrement=False, nullable=False),
    sa.Column('step_progress', postgresql.ENUM('pending', 'in_progress', 'completed', 'error', name='stepprogressstatus'), autoincrement=False, nullable=False),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('total_steps', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_reference', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.id'], name='risk_map_module_analysis_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='risk_map_module_pkey'),
    sa.UniqueConstraint('analysis_id', name='risk_map_module_analysis_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('idx_risk_map_module_analysis_id', 'risk_map_module', ['analysis_id'], unique=False)
    # ### end Alembic commands ###
